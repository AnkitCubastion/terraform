trigger:
  - "*"

pr:
  - "*"

pool:
  vmImage: "default"

steps:
  - script: |
      echo "Installing Terraform..."

      sudo apt-get update && sudo apt-get install -y gnupg software-properties-common

      wget -O- https://apt.releases.hashicorp.com/gpg | \
      gpg --dearmor | \
      sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null

      gpg --no-default-keyring \
      --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
      --fingerprint

      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

      sudo apt update

      sudo apt-get install terraform
    displayName: "Install Terraform"

  - script: |
      echo "Terraform Init..."
      terraform init
      echo "Terraform Init complete."
    displayName: "Terraform Init"

  - script: |
      terraform plan -var "client_id=$(CLIENT_ID)" -var "client_secret=$(CLIENT_SECRET)" -var "tenant_id=$(TENANT_ID)" -var "subscription_id=$(SUBSCRIPTION_ID)"
    displayName: "Terraform plan"

  - script: |
      terraform apply --auto-approve -var "client_id=$(CLIENT_ID)" -var "client_secret=$(CLIENT_SECRET)" -var "tenant_id=$(TENANT_ID)" -var "subscription_id=$(SUBSCRIPTION_ID)"
    displayName: "Terraform Apply"
